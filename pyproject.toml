[tool.poetry]

name = "adaptivesswt"
version = "0.2.1"
description = "A package to calculate an Adaptive Synchrosqueezing Transform"

license = "MIT"

authors = ["Edgardo Marchi <emarchi@inti.gob.ar>"]

readme = "README.md"

homepage = "https://github.com/edgardomarchi/adaptivesswt"
repository = "https://github.com/edgardomarchi/adaptivesswt"

keywords = ["Synchrosqueezing", "Wavelet", "Transform", "DSP"
]

[tool.poetry.dependencies]

python = "^3.10"
pywavelets = "^1.2"
numpy = "^1"
numba = "^0"
click = "*"
scipy = "*"
matplotlib = { version = "*", optional = true }
SoundFile = { version = "^0.10.3.post1", optional = true }

[tool.poetry.extras]
plot = ["matplotlib"]
audio = ["SoundFile"]

[tool.poetry.dev-dependencies]

# Formatters
isort = "^5"   # A Python utility / library to sort imports
black = "*"

# Linters
mypy = "*"
pydocstyle = "*"
pylint = "^2"

# Testing
pytest = "^5"
pytest-cov = "*"
pytest-describe = "*"
pytest-expecter = "*"
pytest-random = "*"
freezegun = "*"        # a mocking library for datetime

# Documentation
sphinx = "*"
pygments = "*"
doc8 = "*"
recommonmark = "*"
m2r2 = "*"

# Tooling
pre-commit = "*"
pyinstaller = "*"
sniffer = "*"
pyinotify = "*"
bump2version = "*"
cookiecutter = "*"

[tool.poetry.scripts]

# adaptivesswt = "adaptivesswt.cli:main"
testSST = { callable = "adaptivesswt.sswt:main", extras = ["plot"] }
testASST = { callable = "adaptivesswt.adaptivesswt:main", extras = ["plot"] }
checkASSTperformance = { callable = "scripts.check_sswt_performance:main", extras = ["plot"] }

[tool.black]

target-version = ["py310"]
skip-string-normalization = true

[tool.isort]
profile = "black"

[build-system]
requires = ["poetry>=1.0",
    "setuptools!=50.0",
    "wheel",
]

build-backend = "poetry.masonry.api"
